PROMPT & INCONTEXT SAMPLES
You are an AI assistant specialized in planning collision-free paths for drones in a two-dimensional environment. You will be given a specific start point, end points and circular obstable position with size.Your task is to calculate a path from the start point to the end point that avoids any circular, static obstacles. Your solution should be a sequence of points in the format of [[x1, y1], [x2, y2], ..., [xn, yn]], forming a safe and efficient route to ensure collision-free movement. The path should be a series of straight lines between consecutive points, avoiding all circular obstacles' areas.  Here are 3 examples.
design a path from [10, 0] to [0, 10] that avoids crossing the area of circle centered at [5, 5] with a radius of 4.
> search: [10, 0] and [0, 0].
No collision between [10, 0] and [0, 0].
> search: [0, 0] and [0, 10].
No collision between [0, 0] and [0, 10].
> finish:[[10, 0], [0, 0], [0, 10]].
design a path from [80, 40] to [-10, 10] that avoids crossing the area of circle centered at [32, 32] with a radius of 30.
> search: [80, 40] and [80, 0].
No collision between [80, 40] and [80, 0]. 
> search: [80, 0] and [-10, 10].
Collision between [80, 0] and [-10, 10].
> search: [80, 0] and [-10, 0].
No collision between [80, 0] and [-10, 0].
> search: [-10, 0] and [-10, 10].
No collision between [-10, 0] and [-10, 10].
> finish:[[80, 40], [80, 0], [-10, 0], [-10, 10]].
design a path from [-2, 27] to [3, -50] that avoids crossing the area of circle centered at [-19, 6] with a radius of 23.
> search: [-2, 27] and [10, 0].
No collision between [-2, 27] and [10, 0].
> search: [10, 0] and [3, -50].
No collision between [10, 0] and [3, -50].
> finish:[[-2, 27], [10, 0], [3, -50]].

Here is the task.

*********************************************************************************************

CHAT HISTORY WITH GPT-3.5

CHAT-1
User> design a path from [32, -18] to [-47, 23] that avoids crossing the area of circle centered at [-20, 3] with a radius of 13.

GPT> search: [32, -18] and [32, 0].
ENV> No collision between [32, -18] and [32, 0].


CHAT-1
User> design a path from [32, -18] to [-47, 23] that avoids crossing the area of circle centered at [-20, 3] with a radius of 13.
> search: [32, -18] and [32, 0].
No collision between [32, -18] and [32, 0].

GPT> search: [32, 0] and [-47, 0].
ENV> Collision between [32, 0] and [-47, 0].


CHAT-1
User> design a path from [32, -18] to [-47, 23] that avoids crossing the area of circle centered at [-20, 3] with a radius of 13.
> search: [32, -18] and [32, 0].
No collision between [32, -18] and [32, 0].
> search: [32, 0] and [-47, 0].
Collision between [32, 0] and [-47, 0].

GPT> search: [32, 0] and [-47, 23].
ENV> Collision between [32, 0] and [-47, 23].


CHAT-1
User> design a path from [32, -18] to [-47, 23] that avoids crossing the area of circle centered at [-20, 3] with a radius of 13.
> search: [32, -18] and [32, 0].
No collision between [32, -18] and [32, 0].
> search: [32, 0] and [-47, 0].
Collision between [32, 0] and [-47, 0].
> search: [32, 0] and [-47, 23].
Collision between [32, 0] and [-47, 23].

GPT> search: [32, 0] and [-20, 3].
ENV> Collision between [32, 0] and [-20, 3].


CHAT-1
User> design a path from [32, -18] to [-47, 23] that avoids crossing the area of circle centered at [-20, 3] with a radius of 13.
> search: [32, -18] and [32, 0].
No collision between [32, -18] and [32, 0].
> search: [32, 0] and [-47, 0].
Collision between [32, 0] and [-47, 0].
> search: [32, 0] and [-47, 23].
Collision between [32, 0] and [-47, 23].
> search: [32, 0] and [-20, 3].
Collision between [32, 0] and [-20, 3].

